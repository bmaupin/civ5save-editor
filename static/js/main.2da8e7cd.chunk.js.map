{"version":3,"sources":["components/PropertyCheckbox.js","components/PropertyNumberTextField.js","components/PropertyRadioGroup.js","components/PropertyList.js","components/AdvancedProperties.js","components/DemoButton.js","components/DownloadFileButton.js","components/HiddenProperties.js","components/MultiplayerProperties.js","components/ReadOnlyProperties.js","components/UploadFileButton.js","components/VictoryTypeProperties.js","components/App.js","registerServiceWorker.js","index.js"],"names":["PropertyCheckbox","props","handleCheckboxClick","bind","event","this","onPropertyChanged","target","value","checked","Form","className","classes","formControlLabel","control","checkbox","onClick","label","PureComponent","PropertyNumberTextField","state","handleTextFieldBlur","handleTextFieldChange","nextProps","setState","String","name","Number","subProperty","disabled","inputProps","max","min","onBlur","onChange","style","width","type","PropertyRadioGroup","handleRadioGroupChange","padding","Radio","selectedValue","values","map","i","radioButton","key","PropertyList","propertyList","propertyListHeading","paper","propertyListBody","Object","keys","saveProperties","propertyName","textFieldDisabled","textFieldLabel","savegame","timeVictory","turnTimerEnabled","pitboss","Civ5Save","TURN_MODES","AdvancedProperties","advancedProperties","gameMode","GAME_MODES","MULTI","newRandomSeed","DemoButton","getFileBlob","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","responseType","addEventListener","response","statusText","send","List","button","a","async","changeSavegameState","App","SAVEGAME_STATES","LOADING","demoSaveFile","fromFile","demoSavegame","onNewSavegame","split","pop","customMessage","onError","primary","DownloadFileButton","downloadURL","isNullOrUndefined","URL","revokeObjectURL","window","createObjectURL","toBlob","component","download","savegameFilename","href","createDownloadURL","Component","variable","HiddenProperties","MultiplayerProperties","multiplayerProperties","HOTSEAT","privateGame","turnMode","styles","createStyleSheet","theme","readOnlyPropertiesItem","ReadOnlyProperties","handleExpandClick","expanded","readOnlyProperties","players","player","civilization","status","join","maxWidth","aria-expanded","aria-label","fontSize","typography","height","margin","transform","transition","transitions","create","duration","shortest","in","transitionDuration","display","flexFlow","paddingBottom","paddingRight","paddingTop","isSavegamePropertyDefined","flex","getPlayerList","enabledDLC","enabledMods","withStyles","UploadFileButton","handleChange","handleClick","refs","fileUploader","files","length","newSaveFile","newSavegame","click","ref","VictoryTypeProperties","REPO_URL","darkTheme","palette","createPalette","createTypography","fontFamily","body1","subheading","title","createMuiTheme","marginRight","backgroundColor","background","contentFrame","savegameState","NOT_LOADED","handleError","handleNewSavegame","handlePropertyChange","newState","error","ERROR","newSavegameFilename","LOADED","newValue","previousState","position","color","d","default","text","minHeight","boxSizing","opacity","alignItems","justifyContent","size","message","dangerouslySetInnerHTML","__html","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","document","getElementById","process","origin","fetch","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"sUAIqBA,E,YACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,oBAAsB,EAAKA,oBAAoBC,KAAzB,gBAHV,E,iFAMCC,GAClBC,KAAKJ,MAAMK,kBAAkBF,EAAMG,OAAOC,MAAOJ,EAAMG,OAAOE,SAEnC,gBAAvBL,EAAMG,OAAOC,QAAoD,IAAzBJ,EAAMG,OAAOE,SACvDJ,KAAKJ,MAAMK,kBAAkB,WAAY,K,+BAK3C,OACE,kBAACI,EAAA,iBAAD,CACEC,UAAWN,KAAKJ,MAAMW,QAAQC,iBAC9BC,QACE,kBAAC,IAAD,CACEL,QAASJ,KAAKJ,MAAMQ,QACpBE,UAAWN,KAAKJ,MAAMW,QAAQG,SAC9BC,QAASX,KAAKH,oBACdM,MAAOH,KAAKJ,MAAMO,QAGtBS,MAAOZ,KAAKJ,MAAMgB,Y,GA3BoBC,iB,kBCDzBC,E,YACnB,WAAYlB,GAAQ,IAAD,8BACjB,4CAAMA,KAEDmB,MAAQ,CACXZ,MAAO,EAAKP,MAAMO,OAGpB,EAAKa,oBAAsB,EAAKA,oBAAoBlB,KAAzB,gBAC3B,EAAKmB,sBAAwB,EAAKA,sBAAsBnB,KAA3B,gBARZ,E,uFAYOoB,GAExBlB,KAAKmB,SAAS,CAAChB,MAAOiB,OAAOF,EAAUf,W,0CAGrBJ,GAElBC,KAAKJ,MAAMK,kBAAkBF,EAAMG,OAAOmB,KAAMC,OAAOvB,EAAMG,OAAOC,U,4CAGhDJ,GACpBC,KAAKmB,SAAS,CAAChB,MAAOJ,EAAMG,OAAOC,U,+BAInC,OAEE,yBAAKG,UAAWN,KAAKJ,MAAMW,QAAQgB,aACjC,kBAAC,IAAD,CACEC,SAAUxB,KAAKJ,MAAM4B,SACrBC,WAAY,CACVC,IAAK,IACLC,IAAK,GAEPf,MAAOZ,KAAKJ,MAAMgB,MAClBS,KAAMrB,KAAKJ,MAAMyB,KACjBO,OAAQ5B,KAAKgB,oBACba,SAAU7B,KAAKiB,sBAEfa,MAAO,CAACC,MAAO,QACfC,KAAK,SACL7B,MAAOH,KAAKe,MAAMZ,a,GA5CyBU,iB,mCCGhCoB,E,YACnB,WAAYrC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDsC,uBAAyB,EAAKA,uBAAuBpC,KAA5B,gBAHb,E,oFAMIC,GACrBC,KAAKJ,MAAMK,kBAAkBF,EAAMG,OAAOmB,KAAMtB,EAAMG,OAAOC,S,+BAGrD,IAAD,OACP,OACE,6BACE,kBAAC,IAAD,CACE2B,MAAO,CACLK,QAAS,cAEXH,KAAK,SAEJhC,KAAKJ,MAAMgB,OAEd,kBAACwB,EAAA,WAAD,CACE9B,UAAWN,KAAKJ,MAAMW,QAAQgB,YAC9BF,KAAMrB,KAAKJ,MAAMyB,KACjBQ,SAAU7B,KAAKkC,uBACfG,cAAerC,KAAKJ,MAAMyC,eAEzBrC,KAAKJ,MAAM0C,OAAOC,KAAI,SAACpC,EAAOqC,GAAR,OACrB,kBAACnC,EAAA,iBAAD,CAAkBC,UAAW,EAAKV,MAAMW,QAAQkC,YAAahC,QAAS,kBAAC,IAAD,MAAWiC,IAAKvC,EAAOS,MAAOT,EAAOA,MAAOA,a,GA7B9EU,iB,iBCGjC,SAAS8B,EAAa/C,GACnC,OACE,yBAAKU,UAAWV,EAAMW,QAAQqC,cAC5B,kBAAC,IAAD,CAAYtC,UAAWV,EAAMW,QAAQsC,oBAAqBb,KAAK,cAC5DpC,EAAMgB,OAET,kBAAC,IAAD,CAAON,UAAWV,EAAMW,QAAQuC,OAC9B,kBAACzC,EAAA,UAAD,CAAWC,UAAWV,EAAMW,QAAQwC,kBACjCC,OAAOC,KAAKrD,EAAMsD,gBAAgBX,KAAI,SAAAY,GACrC,IAAIC,EAAoB,KACpBC,EAAiB,KAQrB,MAPqB,aAAjBF,GACFC,GAAqBxD,EAAM0D,SAASC,YACpCF,EAAiBzD,EAAMsD,eAAeC,IACZ,oBAAjBA,IACTC,GAAqBxD,EAAM0D,SAASE,iBACpCH,GAA6C,IAA3BzD,EAAM0D,SAASG,QAAmB,QAAU,WAE3C,aAAjBN,GAAiD,oBAAlBA,EAE/B,kBAAC,EAAD,CACE5C,QAASX,EAAMW,QACfiB,SAAU4B,EACVxC,MAAOyC,EACPX,IAAKS,EACL9B,KAAM8B,EACNlD,kBAAmBL,EAAMK,kBACzBE,MAAOP,EAAM0D,SAASH,KAGA,aAAjBA,EAEP,kBAAC,EAAD,CACE5C,QAASX,EAAMW,QACfK,MAAOhB,EAAMsD,eAAeC,GAC5BT,IAAKS,EACL9B,KAAM8B,EACNlD,kBAAmBL,EAAMK,kBACzBoC,cAAezC,EAAM0D,SAASH,GAC9Bb,OAAQU,OAAOV,OAAOoB,IAASC,cAKjC,kBAAC,EAAD,CACEvD,QAASR,EAAM0D,SAASH,GACxB5C,QAASX,EAAMW,QACfmC,IAAKS,EACLvC,MAAOhB,EAAMsD,eAAeC,GAC5BlD,kBAAmBL,EAAMK,kBACzBE,MAAOgD,UCvDV,SAASS,EAAmBhE,GACzC,IAAIiE,EAAqB,CACvB,aAAgB,sBAChB,gBAAmB,yBACnB,cAAiB,iBACjB,cAAiB,kBACjB,aAAgB,gBAChB,YAAe,eACf,aAAgB,iBAChB,iBAAoB,qBACpB,iBAAoB,oBACpB,oBAAuB,wBAOzB,OAJIjE,EAAM0D,SAASQ,WAAaJ,IAASK,WAAWC,cAC3CH,EAAmBI,cAI1B,kBAACtB,EAAD,CACEpC,QAASX,EAAMW,QACfK,MAAM,mBACNX,kBAAmBL,EAAMK,kBACzBqD,SAAU1D,EAAM0D,SAChBJ,eAAgBW,I,4HCpBP,SAASK,EAAWtE,GACjC,SAASuE,EAAYC,GACnB,OAAO,IAAIC,SAAQ,SAAUC,EAASC,GACpC,IAAIC,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAON,GAChBI,EAAIG,aAAe,OACnBH,EAAII,iBAAiB,QAAQ,WAC3BN,EAAQE,EAAIK,aAEdL,EAAII,iBAAiB,SAAS,WAC5BL,EAAOC,EAAIM,eAEbN,EAAIO,UAgBR,OACE,kBAACC,EAAA,SAAD,CACEC,QAAM,EACNtE,QAfJ,SAA2BZ,GAA3B,iBAAAmF,EAAAC,OAAA,uDACEvF,EAAMwF,oBAAoBC,GAAIC,gBAAgBC,SADhD,WAAAL,EAAA,MAE2Bf,EApBN,uBAkBrB,cAEMqB,EAFN,2BAAAN,EAAA,MAI6BxB,IAAS+B,SAASD,IAJ/C,OAIQE,EAJR,OAKI9F,EAAM+F,cAAcD,EAvBH,qBAuBgCE,MAAM,KAAKC,OALhE,kDAOI,KAAEC,cAAgB,4JAClBlG,EAAMmG,QAAN,MARJ,2DAiBI,kBAACf,EAAA,aAAD,KACE,kBAAC,IAAD,6BAEF,kBAACA,EAAA,aAAD,CAAcgB,QAAQ,U,ICxCPC,E,YACnB,WAAYrG,GAAQ,IAAD,8BACjB,4CAAMA,KAIDsG,YAAc,KALF,E,iFASjB,IAAKC,EAAkBnG,KAAKJ,MAAM0D,UAMhC,OALK6C,EAAkBnG,KAAKkG,cAC1BE,IAAIC,gBAAgBrG,KAAKkG,aAG3BlG,KAAKkG,YAAcI,OAAOF,IAAIG,gBAAgBvG,KAAKJ,MAAM0D,SAASkD,UAC3DxG,KAAKkG,c,+BAKd,OACE,kBAAClB,EAAA,SAAD,CACEC,QAAM,EACNwB,UAAU,IACVjF,SAAUxB,KAAKJ,MAAM4B,SACrBkF,SAAU1G,KAAKJ,MAAM+G,iBACrBC,KAAM5G,KAAK6G,qBAEX,kBAAC7B,EAAA,aAAD,KACE,kBAAC,IAAD,uBAEF,kBAACA,EAAA,aAAD,CAAcgB,QAAQ,kB,GAhCkBc,aAsChD,SAASX,EAAkBY,GACzB,MAA2B,qBAAbA,GAAyC,OAAbA,ECxC7B,SAASC,EAAiBpH,GACvC,OACE,kBAAC+C,EAAD,CACEpC,QAASX,EAAMW,QACfK,MAAM,iBACNX,kBAAmBL,EAAMK,kBACzBqD,SAAU1D,EAAM0D,SAChBJ,eAAgB,CACd,YAAe,eACf,UAAa,aACb,SAAY,YACZ,mBAAsB,2BACtB,oBAAuB,yBACvB,YAAe,eACf,WAAc,cACd,WAAc,cACd,UAAa,aACb,gBAAmB,uB,qBChBZ,SAAS+D,EAAsBrH,GAC5C,IAAIsH,EAAwB,CAC1B,QAAW,UACX,YAAe,eACf,iBAAoB,aACpB,gBAAmB,UACnB,SAAY,aASd,OANItH,EAAM0D,SAASQ,WAAaJ,IAASK,WAAWoD,iBAC3CD,EAAsBzD,eACtByD,EAAsBE,mBACtBF,EAAsBG,UAI7B,kBAAC1E,EAAD,CACEpC,QAASX,EAAMW,QACfK,MAAM,sBACNX,kBAAmBL,EAAMK,kBACzBqD,SAAU1D,EAAM0D,SAChBJ,eAAgBgE,I,+DCjBhBI,GAASC,4BAAiB,SAAAC,GAAK,MAAK,CACxCC,uBAAwB,CACtBtF,QAAS,qBAIPuF,G,YACJ,WAAY9H,GAAQ,IAAD,8BACjB,4CAAMA,KAiCR+H,kBAAoB,WAClB,EAAKxG,SAAS,CAAEyG,UAAW,EAAK7G,MAAM6G,YAhCtC,EAAK7G,MAAQ,CACX6G,UAAU,GAGZ,EAAKC,mBAAqB,CACxB,UAAa,aACb,YAAe,eACf,SAAY,YACZ,YAAe,eACf,WAAc,aACd,YAAe,eACf,WAAc,cACd,SAAY,YACZ,QAAW,WACX,QAAW,OAjBI,E,6EA+BjB,OATsB7H,KAAKJ,MAAM0D,SAASwE,QAAQvF,KAAI,SAAAwF,GACpD,MAAmC,qBAAxBA,EAAOC,aACV,GAAN,OAAUD,EAAOC,aAAjB,aAAkCD,EAAOE,OAAzC,KAEM,IAAN,OAAWF,EAAOE,OAAlB,QAG6BC,KAAK,Q,gDASd/E,GACxB,QAoGyB,qBADF4D,EAnGG/G,KAAKJ,MAAM0D,WAoGgB,OAAbyD,IApGuD,qBAAtC/G,KAAKJ,MAAM0D,SAASH,GAmGjF,IAA2B4D,I,+BAhGd,IAAD,OACR,OACE,yBACEzG,UAAWN,KAAKJ,MAAMW,QAAQqC,aAC9Bd,MAAO,CAELqG,SAAU,UAGZ,kBAAC,IAAD,CACEC,gBAAepI,KAAKe,MAAM6G,SAC1BS,aAAW,eACX/H,UAAWN,KAAKJ,MAAMW,QAAQsC,oBAC9BlC,QAASX,KAAK2H,kBACd7F,MAAO,CACLwG,SAAUtI,KAAKJ,MAAM4H,MAAMe,WAAWD,SACtCE,OAAQ,UACRzG,MAAO,YAGT,kBAAC,IAAD,CAAYC,KAAK,cAAjB,gBAGA,kBAAC,IAAD,CACEF,MAAO,CACL2G,OAAQ,QACRC,UAAY1I,KAAKe,MAAM6G,UAAY,iBACnCe,WAAY3I,KAAKJ,MAAM4H,MAAMoB,YAAYC,OAAO,YAAa,CAC3DC,SAAU9I,KAAKJ,MAAM4H,MAAMoB,YAAYE,SAASC,aALtD,gBAUF,kBAAC,KAAD,CACEC,GAAIhJ,KAAKe,MAAM6G,SACf9F,MAAO,CAEL2G,OAAQ,OACRtG,QAAS,OAEX8G,mBAAmB,QAEnB,kBAAC,IAAD,CAAO3I,UAAWN,KAAKJ,MAAMW,QAAQuC,OACnC,yBACExC,UAAWN,KAAKJ,MAAMW,QAAQwC,iBAC9BjB,MAAO,CACLoH,QAAS,OACTC,SAAU,WAEVC,cAAe,MACfC,aAAc,MAEdC,WAAY,SAGbtG,OAAOC,KAAKjD,KAAK6H,oBAAoBtF,KAAI,SAAAY,GAAY,OACpD,EAAKoG,0BAA0BpG,IAC7B,yBACE7C,UAAW,EAAKV,MAAMW,QAAQkH,uBAC9B/E,IAAKS,EACLrB,MAAO,CACL0H,KAAM,cAGR,kBAAC,IAAD,CAAYxH,KAAK,SAAS,EAAK6F,mBAAmB1E,GAAlD,IAAiE,6BAAM,4BAAK,EAAKvD,MAAM0D,SAASH,SAGtG,yBAAK7C,UAAWN,KAAKJ,MAAMW,QAAQkH,wBACjC,kBAAC,IAAD,CAAYzF,KAAK,SAAjB,YAAkC,4BAAKhC,KAAKyJ,mBAE7CzJ,KAAKuJ,0BAA0B,eAC9B,yBACAjJ,UAAWN,KAAKJ,MAAMW,QAAQkH,uBAC9B3F,MAAO,CACLC,MAAO,SAEP,kBAAC,IAAD,CAAYC,KAAK,SAAjB,QAA8B,4BAAKhC,KAAKJ,MAAM0D,SAASoG,WAAWxB,KAAK,OAAS,UAGnFlI,KAAKuJ,0BAA0B,gBAC9B,yBACEjJ,UAAWN,KAAKJ,MAAMW,QAAQkH,uBAC9B3F,MAAO,CACLC,MAAO,SAET,kBAAC,IAAD,CAAYC,KAAK,SAAjB,SAA+B,4BAAKhC,KAAKJ,MAAM0D,SAASqG,YAAYzB,KAAK,OAAS,kB,GAhInEpB,aA+IlB8C,4BAAWtC,GAAXsC,CAAmBlC,ICvJbmC,G,YACnB,WAAYjK,GAAQ,IAAD,8BACjB,4CAAMA,KAEDkK,aAAe,EAAKA,aAAahK,KAAlB,gBACpB,EAAKiK,YAAc,EAAKA,YAAYjK,KAAjB,gBAJF,E,0EAOAC,G,+EACbC,KAAKgK,KAAKC,aAAaC,MAAMC,OAAS,G,wBACxCnK,KAAKJ,MAAMwF,oBAAoBC,GAAIC,gBAAgBC,SAC/C6E,EAAcpK,KAAKgK,KAAKC,aAAaC,MAAM,G,4BAErBxG,IAAS+B,SAAS2E,I,OAAtCC,E,OACJrK,KAAKJ,MAAM+F,cAAc0E,EAAaD,EAAY/I,M,kDAElD,KAAEyE,cAAgB,uEAClB9F,KAAKJ,MAAMmG,QAAX,M,6FAKMhG,GAEVC,KAAKgK,KAAKC,aAAa9J,MAAQ,KAC/BH,KAAKgK,KAAKC,aAAaK,U,+BAIvB,OACE,kBAACtF,EAAA,SAAD,CAAUC,QAAM,EAACtE,QAASX,KAAK+J,aAC7B,kBAAC/E,EAAA,aAAD,KACE,kBAAC,IAAD,qBAEF,kBAACA,EAAA,aAAD,CAAcgB,QAAQ,mBACtB,2BAAOhE,KAAK,OAAOuI,IAAI,eAAe1I,SAAU7B,KAAK8J,aAAchI,MAAO,CAACoH,QAAS,e,GAnC9CrI,iBCH/B,SAAS2J,GAAsB5K,GAC5C,OACE,kBAAC+C,EAAD,CACEpC,QAASX,EAAMW,QACfK,MAAM,gBACNX,kBAAmBL,EAAMK,kBACzBqD,SAAU1D,EAAM0D,SAChBJ,eAAgB,CACd,YAAe,eACf,SAAY,YACZ,eAAkB,kBAClB,kBAAqB,qBACrB,gBAAmB,mBACnB,kBAAqB,wBCQ7B,IACMuH,GAAW,6CAEXC,GAAa,WACjB,IAAMC,EAAUC,IAAc,CAC5B5I,KAAM,SAIFuG,EAAasC,IAAiBF,EAAS,CAC3CG,WAAY,kEACZxC,SAAU,YAQZ,OAJAC,EAAWwC,MAAMzC,SAAW,UAC5BC,EAAWyC,WAAW1C,SAAW,SACjCC,EAAW0C,MAAM3C,SAAW,QAErB4C,yBAAe,CACpBP,QAASA,EACTpC,WAAYA,IAlBG,GAsBbjB,GAASC,4BAAiB,SAAAC,GAAK,MAAK,CACxC9G,SAAU,CACR8H,OAAQ,QAEVhI,iBAAkB,CAChB2K,YAAa,KAEfrI,MAAO,CACLsI,gBAAiBV,GAAUC,QAAQU,WAAWC,cAEhD1I,aAAc,CACZ6F,OAAQ,mBAEV1F,iBAAkB,CAChB0F,OAAQ,aACRtG,QAAS,aAEXM,YAAa,CACX+F,OAAQ,QAEVjH,YAAa,CACXY,QAAS,kBAIPkD,G,YACJ,WAAYzF,GAAQ,IAAD,8BACjB,4CAAMA,KAEDmB,MAAQ,CACXuC,SAAU,KACViI,cAAelG,EAAIC,gBAAgBkG,YAGrC,EAAKpG,oBAAsB,EAAKA,oBAAoBtF,KAAzB,gBAC3B,EAAK2L,YAAc,EAAKA,YAAY3L,KAAjB,gBACnB,EAAK4L,kBAAoB,EAAKA,kBAAkB5L,KAAvB,gBACzB,EAAK6L,qBAAuB,EAAKA,qBAAqB7L,KAA1B,gBAXX,E,iFAcC8L,GAClB5L,KAAKmB,SAAS,CACZoK,cAAeK,M,kCAIPC,GACV7L,KAAKmB,SAAS,CACZ0K,MAAOA,EACPN,cAAelG,EAAIC,gBAAgBwG,U,wCAIrBzB,EAAa0B,GAC7B/L,KAAKmB,SAAS,CACZmC,SAAU+G,EACV1D,iBAAkBoF,EAClBR,cAAelG,EAAIC,gBAAgB0G,W,2CAIlB7I,EAAc8I,GACjCjM,KAAKmB,UAAS,SAAC+K,GAEb,OADAA,EAAc5I,SAASH,GAAgB8I,EAChCC,O,+BAKT,OACE,kBAAC,mBAAD,CACE5L,UAAU,MACVwB,MAAO,CACL0G,OAAQ,QAEVhB,MAAOkD,IAEP,yBACE5I,MAAO,CACL0G,OAAQ,SAGV,kBAAC,IAAD,CACG1G,MAAO,CAENqK,SAAU,aAGZ,kBAAC,KAAD,KACE,kBAAC,IAAD,CAEErK,MAAO,CAAE0H,KAAM,KACfxH,KAAK,SArHH,8BAyHJ,kBAAC,IAAD,CAAYoK,MAAM,WAAWxF,KAAM6D,IACjC,kBAAC,IAAD,KACE,0BAAM4B,EAAE,8sBAKhB,yBACEvK,MAAO,CACLuJ,WAAYX,GAAUC,QAAQU,WAAWiB,QACzCF,MAAO1B,GAAUC,QAAQ4B,KAAKvG,QAC9BkD,QAAS,OAETsD,UAAW,sBAGb,yBACE1K,MAAO,CACL0K,UAAW,SAGb,kBAAC,IAAD,CACE1K,MAAO,CACLsJ,gBAAiBV,GAAUC,QAAQU,WAAWvI,MAC9C2J,UAAW,aACXjE,OAAQ,SAGV,kBAAC,GAAD,CACEpD,oBAAqBpF,KAAKoF,oBAC1BW,QAAS/F,KAAKyL,YACd9F,cAAe3F,KAAK0L,oBAEtB,kBAAC,EAAD,CACElK,SAAUxB,KAAKe,MAAMwK,gBAAkBlG,EAAIC,gBAAgB0G,OAC3D1I,SAAUtD,KAAKe,MAAMuC,SACrBqD,iBAAkB3G,KAAKe,MAAM4F,mBAE/B,kBAAC3B,EAAA,SAAD,CAAUC,QAAM,EAACwB,UAAU,IAAIG,KAAI,UAAK6D,GAAL,YACjC,kBAACzF,EAAA,aAAD,KACE,kBAAC,IAAD,oBAEF,kBAACA,EAAA,aAAD,CAAcgB,QAAQ,gBAExB,kBAAC9B,EAAD,CACEkB,oBAAqBpF,KAAKoF,oBAC1BW,QAAS/F,KAAKyL,YACd9F,cAAe3F,KAAK0L,sBAI1B,yBACE5J,MAAO,CACL0H,KAAM,IACNrH,QAAS,kBAGVnC,KAAKe,MAAMwK,gBAAkBlG,EAAIC,gBAAgBkG,YAChD,kBAAC,IAAD,CACE1J,MAAO,CACL4K,QAAS,QAGX,kBAAC1H,EAAA,SAAD,KACE,kBAACA,EAAA,aAAD,CAAcgB,QAAQ,yFAExB,kBAAChB,EAAA,SAAD,KACE,kBAACA,EAAA,aAAD,CAAcgB,QAAQ,sFAExB,kBAAChB,EAAA,SAAD,KACE,kBAACA,EAAA,aAAD,CAAcgB,QAAQ,gEAExB,kBAAChB,EAAA,SAAD,KACE,kBAACA,EAAA,aAAD,CAAcgB,QAAQ,sEAI3BhG,KAAKe,MAAMwK,gBAAkBlG,EAAIC,gBAAgBC,SAChD,yBACEzD,MAAO,CACL6K,WAAY,SACZzD,QAAS,OACTV,OAAQ,OACRoE,eAAgB,WAGlB,6BACE,kBAAC,mBAAD,CAAkBC,KAAM,OAI7B7M,KAAKe,MAAMwK,gBAAkBlG,EAAIC,gBAAgB0G,QAChD,6BACE,kBAAC,GAAD,CACEzL,QAASP,KAAKJ,MAAMW,QACpB+C,SAAUtD,KAAKe,MAAMuC,SACrBkE,MAAOkD,KAET,yBACE5I,MAAO,CACLoH,QAAS,OACTC,SAAU,aAGZ,kBAACqB,GAAD,CACEjK,QAASP,KAAKJ,MAAMW,QACpBN,kBAAmBD,KAAK2L,qBACxBrI,SAAUtD,KAAKe,MAAMuC,WAEvB,kBAACM,EAAD,CACErD,QAASP,KAAKJ,MAAMW,QACpBN,kBAAmBD,KAAK2L,qBACxBrI,SAAUtD,KAAKe,MAAMuC,WAEvB,kBAAC0D,EAAD,CACEzG,QAASP,KAAKJ,MAAMW,QACpBN,kBAAmBD,KAAK2L,qBACxBrI,SAAUtD,KAAKe,MAAMuC,YAErBtD,KAAKe,MAAMuC,SAASQ,WAAaJ,IAASK,WAAWC,OACrDhE,KAAKe,MAAMuC,SAASQ,WAAaJ,IAASK,WAAWoD,UACrD,kBAACF,EAAD,CACE1G,QAASP,KAAKJ,MAAMW,QACpBN,kBAAmBD,KAAK2L,qBACxBrI,SAAUtD,KAAKe,MAAMuC,aAM9BtD,KAAKe,MAAMwK,gBAAkBlG,EAAIC,gBAAgBwG,OAChD,kBAAC,IAAD,CACEhK,MAAO,CACL2G,OAAQ,QAEVzG,KAAK,cAEL,2BAAG,kBAAC,IAAD,CAAMF,MAAO,CAAEwG,SAAU,SAAzB,kBACH,qGACA,6BACGtI,KAAKe,MAAM8K,MAAMiB,SAEpB,uBAAGC,wBAAyB,CAACC,OAAQhN,KAAKe,MAAM8K,MAAM/F,0B,GArNtDgB,aAgOlBzB,GAAIC,gBAAkB,CACpBwG,MAAO,QACPE,OAAQ,SACRzG,QAAS,UACTiG,WAAY,cAGC5B,4BAAWtC,GAAXsC,CAAmBvE,ICvS5B4H,GAAcC,QACW,cAA7B5G,OAAO6G,SAASC,UAEe,UAA7B9G,OAAO6G,SAASC,UAEhB9G,OAAO6G,SAASC,SAASC,MACvB,2DA6BN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB/M,QACfyM,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAvC,GACLqC,QAAQrC,MAAM,4CAA6CA,MChEjEwC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBhB,UAAW,CAGzE,GADkB,IAAIpH,IAAIqI,mBAAwBnI,OAAO6G,UAC3CuB,SAAWpI,OAAO6G,SAASuB,OAIvC,OAGFpI,OAAO1B,iBAAiB,QAAQ,WAC9B,IAAM2I,EAAK,UAAMkB,mBAAN,sBAENxB,GAwCX,SAAiCM,GAE/BoB,MAAMpB,GACHI,MAAK,SAAA9I,GAGkB,MAApBA,EAASoD,SACuD,IAAhEpD,EAAS+J,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CtB,UAAUC,cAAcsB,MAAMpB,MAAK,SAAAC,GACjCA,EAAaoB,aAAarB,MAAK,WAC7BrH,OAAO6G,SAAS8B,eAKpB3B,GAAgBC,MAGnBa,OAAM,WACLF,QAAQC,IACN,oEAzDAe,CAAwB3B,GAHxBD,GAAgBC,OC7BxB4B,K","file":"static/js/main.2da8e7cd.chunk.js","sourcesContent":["import Checkbox from 'material-ui/Checkbox';\nimport { FormControlLabel } from 'material-ui/Form';\nimport React, { PureComponent } from 'react';\n\nexport default class PropertyCheckbox extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(event) {\n    this.props.onPropertyChanged(event.target.value, event.target.checked);\n\n    if (event.target.value === 'timeVictory' && event.target.checked === false) {\n      this.props.onPropertyChanged('maxTurns', 0);\n    }\n  }\n\n  render() {\n    return (\n      <FormControlLabel\n        className={this.props.classes.formControlLabel}\n        control={\n          <Checkbox\n            checked={this.props.checked}\n            className={this.props.classes.checkbox}\n            onClick={this.handleCheckboxClick}\n            value={this.props.value}\n          />\n        }\n        label={this.props.label}\n      />\n    )\n  }\n}\n","import React, { PureComponent } from 'react';\nimport TextField from 'material-ui/TextField';\n\nexport default class PropertyNumberTextField extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n    };\n\n    this.handleTextFieldBlur = this.handleTextFieldBlur.bind(this);\n    this.handleTextFieldChange = this.handleTextFieldChange.bind(this);\n  }\n\n  // Update the value from props if it changes as well\n  componentWillReceiveProps(nextProps) {\n    // Using a string is a hack because otherwise the label will move and cover up the value\n    this.setState({value: String(nextProps.value)});\n  }\n\n  handleTextFieldBlur(event) {\n    // Forcing the input to a number will convert an empty string to 0\n    this.props.onPropertyChanged(event.target.name, Number(event.target.value));\n  }\n\n  handleTextFieldChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  render() {\n    return (\n      // The parent div is required so that styling is applied to the textfield label as well\n      <div className={this.props.classes.subProperty}>\n        <TextField\n          disabled={this.props.disabled}\n          inputProps={{\n            max: 999,\n            min: 0,\n          }}\n          label={this.props.label}\n          name={this.props.name}\n          onBlur={this.handleTextFieldBlur}\n          onChange={this.handleTextFieldChange}\n          // Setting min and max messes up the width\n          style={{width: '100%'}}\n          type=\"number\"\n          value={this.state.value}\n        />\n      </div>\n    );\n  }\n}\n","import { FormControlLabel } from 'material-ui/Form';\nimport Radio, { RadioGroup } from 'material-ui/Radio';\nimport React, { PureComponent } from 'react';\nimport Typography from 'material-ui/Typography';\n\n// XXX: If this.props.values needs to change, this class cannot be a PureComponent\nexport default class PropertyRadioGroup extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleRadioGroupChange = this.handleRadioGroupChange.bind(this);\n  }\n\n  handleRadioGroupChange(event) {\n    this.props.onPropertyChanged(event.target.name, event.target.value);\n  }\n\n  render() {\n    return (\n      <div>\n        <Typography\n          style={{\n            padding: '12px 0 0 0',\n          }}\n          type=\"body1\"\n        >\n          {this.props.label}\n        </Typography>\n        <RadioGroup\n          className={this.props.classes.subProperty}\n          name={this.props.name}\n          onChange={this.handleRadioGroupChange}\n          selectedValue={this.props.selectedValue}\n        >\n          {this.props.values.map((value, i) =>\n            <FormControlLabel className={this.props.classes.radioButton} control={<Radio />} key={value} label={value} value={value} />\n          )}\n        </RadioGroup>\n      </div>\n    );\n  }\n}\n","import Civ5Save from 'civ5save';\nimport { FormGroup } from 'material-ui/Form';\nimport PropertyCheckbox from './PropertyCheckbox';\nimport PropertyNumberTextField from './PropertyNumberTextField';\nimport PropertyRadioGroup from './PropertyRadioGroup';\nimport Paper from 'material-ui/Paper';\nimport React from 'react';\nimport Typography from 'material-ui/Typography';\n\nexport default function PropertyList(props) {\n  return (\n    <div className={props.classes.propertyList}>\n      <Typography className={props.classes.propertyListHeading} type=\"subheading\">\n        {props.label}\n      </Typography>\n      <Paper className={props.classes.paper}>\n        <FormGroup className={props.classes.propertyListBody}>\n          {Object.keys(props.saveProperties).map(propertyName => {\n            let textFieldDisabled = null;\n            let textFieldLabel = null;\n            if (propertyName === 'maxTurns') {\n              textFieldDisabled = !props.savegame.timeVictory;\n              textFieldLabel = props.saveProperties[propertyName];\n            } else if (propertyName === 'turnTimerLength') {\n              textFieldDisabled = !props.savegame.turnTimerEnabled;\n              textFieldLabel = (props.savegame.pitboss === true ? 'Hours' : 'Seconds');\n            }\n            if (propertyName === 'maxTurns' || propertyName ===  'turnTimerLength') {\n              return (\n                <PropertyNumberTextField\n                  classes={props.classes}\n                  disabled={textFieldDisabled}\n                  label={textFieldLabel}\n                  key={propertyName}\n                  name={propertyName}\n                  onPropertyChanged={props.onPropertyChanged}\n                  value={props.savegame[propertyName]}\n                />\n              )\n            } else if (propertyName === 'turnMode') {\n              return (\n                <PropertyRadioGroup\n                  classes={props.classes}\n                  label={props.saveProperties[propertyName]}\n                  key={propertyName}\n                  name={propertyName}\n                  onPropertyChanged={props.onPropertyChanged}\n                  selectedValue={props.savegame[propertyName]}\n                  values={Object.values(Civ5Save.TURN_MODES)}\n                />\n              )\n            } else {\n              return (\n                <PropertyCheckbox\n                  checked={props.savegame[propertyName]}\n                  classes={props.classes}\n                  key={propertyName}\n                  label={props.saveProperties[propertyName]}\n                  onPropertyChanged={props.onPropertyChanged}\n                  value={propertyName}\n                />\n              )\n            }\n          })}\n        </FormGroup>\n      </Paper>\n    </div>\n  );\n}","import Civ5Save from 'civ5save';\nimport PropertyList from './PropertyList';\nimport React from 'react';\n\nexport default function AdvancedProperties(props) {\n  let advancedProperties = {\n    'policySaving': 'Allow policy saving',\n    'promotionSaving': 'Allow promotion saving',\n    'completeKills': 'Complete kills',\n    'newRandomSeed': 'New random seed',\n    'noBarbarians': 'No barbarians',\n    'noEspionage': 'No espionage',\n    'noCityRazing': 'No city razing',\n    'oneCityChallenge': 'One-city challenge',\n    'ragingBarbarians': 'Raging barbarians',\n    'randomPersonalities': 'Random personalities',\n  }\n\n  if (props.savegame.gameMode === Civ5Save.GAME_MODES.MULTI) {\n    delete advancedProperties.newRandomSeed;\n  }\n\n  return (\n    <PropertyList\n      classes={props.classes}\n      label=\"Advanced options\"\n      onPropertyChanged={props.onPropertyChanged}\n      savegame={props.savegame}\n      saveProperties={advancedProperties}\n    />\n  );\n}\n","import App from './App';\nimport Civ5Save from 'civ5save';\nimport Icon from 'material-ui/Icon';\nimport { ListItem, ListItemIcon, ListItemText } from 'material-ui/List';\nimport React from 'react';\n\nconst DEMO_SAVE_FILE = 'demo/demo.Civ5Save';\n\nexport default function DemoButton(props) {\n  function getFileBlob(url) {\n    return new Promise(function (resolve, reject) {\n      let xhr = new XMLHttpRequest();\n      xhr.open('GET', url);\n      xhr.responseType = 'blob';\n      xhr.addEventListener('load', function() {\n        resolve(xhr.response);\n      });\n      xhr.addEventListener('error', function() {\n        reject(xhr.statusText);\n      });\n      xhr.send();\n    });\n  }\n\n  async function handleClick(event) {\n    props.changeSavegameState(App.SAVEGAME_STATES.LOADING);\n    let demoSaveFile = await getFileBlob(DEMO_SAVE_FILE);\n    try {\n      let demoSavegame = await Civ5Save.fromFile(demoSaveFile);\n      props.onNewSavegame(demoSavegame, DEMO_SAVE_FILE.split('/').pop());\n    } catch (e) {\n      e.customMessage = 'Your web browser may be outdated. Please upgrade your browser or install a modern browser such as <a href=\"https://www.mozilla.org/firefox/\">Firefox</a>.';\n      props.onError(e);\n    }\n  }\n\n  return (\n    <ListItem\n      button\n      onClick={handleClick}\n    >\n      <ListItemIcon>\n        <Icon>play_circle_outline</Icon>\n      </ListItemIcon>\n      <ListItemText primary=\"Demo\" />\n    </ListItem>\n  );\n}\n","import Icon from 'material-ui/Icon';\nimport { ListItem, ListItemIcon, ListItemText } from 'material-ui/List';\nimport React, { Component } from 'react';\n\nexport default class DownloadFileButton extends Component {\n  constructor(props) {\n    super(props);\n\n    // Store URL in a variable so we can revoke it when we're done with it\n    // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL#Notes\n    this.downloadURL = null;\n  }\n\n  createDownloadURL() {\n    if (!isNullOrUndefined(this.props.savegame)) {\n      if (!isNullOrUndefined(this.downloadURL)) {\n        URL.revokeObjectURL(this.downloadURL);\n      }\n\n      this.downloadURL = window.URL.createObjectURL(this.props.savegame.toBlob());\n      return this.downloadURL;\n    }\n  }\n\n  render() {\n    return (\n      <ListItem\n        button\n        component=\"a\"\n        disabled={this.props.disabled}\n        download={this.props.savegameFilename}\n        href={this.createDownloadURL()}\n      >\n        <ListItemIcon>\n          <Icon>file_download</Icon>\n        </ListItemIcon>\n        <ListItemText primary=\"Download\" />\n      </ListItem>\n    );\n  }\n}\n\nfunction isNullOrUndefined(variable) {\n  return typeof variable === 'undefined' || variable === null;\n}\n","import PropertyList from './PropertyList';\nimport React from 'react';\n\nexport default function HiddenProperties(props) {\n  return (\n    <PropertyList\n      classes={props.classes}\n      label=\"Hidden options\"\n      onPropertyChanged={props.onPropertyChanged}\n      savegame={props.savegame}\n      saveProperties={{\n        'alwaysPeace': 'Always peace',\n        'alwaysWar': 'Always war',\n        'lockMods': 'Lock mods',\n        'noChangingWarPeace': 'No changing war or peace',\n        'noCultureOverviewUI': 'No culture overview UI',\n        'noHappiness': 'No happiness',\n        'noPolicies': 'No policies',\n        'noReligion': 'No religion',\n        'noScience': 'No science',\n        'noWorldCongress': 'No world congress',\n      }}\n    />\n  );\n}\n","import Civ5Save from 'civ5save';\nimport PropertyList from './PropertyList';\nimport React from 'react';\n\nexport default function MultiplayerProperties(props) {\n  let multiplayerProperties = {\n    'pitboss': 'Pitboss',\n    'privateGame': 'Private game',\n    'turnTimerEnabled': 'Turn timer',\n    'turnTimerLength': 'Seconds',\n    'turnMode': 'Turn mode',\n  }\n\n  if (props.savegame.gameMode === Civ5Save.GAME_MODES.HOTSEAT) {\n    delete multiplayerProperties.pitboss;\n    delete multiplayerProperties.privateGame;\n    delete multiplayerProperties.turnMode;\n  }\n\n  return (\n    <PropertyList\n      classes={props.classes}\n      label=\"Multiplayer options\"\n      onPropertyChanged={props.onPropertyChanged}\n      savegame={props.savegame}\n      saveProperties={multiplayerProperties}\n    />\n  );\n}\n","import Collapse from 'material-ui/transitions/Collapse';\nimport Icon from 'material-ui/Icon';\nimport IconButton from 'material-ui/IconButton';\nimport Paper from 'material-ui/Paper';\nimport React, { Component } from 'react';\nimport { createStyleSheet, withStyles } from 'material-ui/styles';\nimport Typography from 'material-ui/Typography';\n\nconst styles = createStyleSheet(theme => ({\n  readOnlyPropertiesItem: {\n    padding: '0 16px 16px 0',\n  },\n}));\n\nclass ReadOnlyProperties extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: false,\n    };\n\n    this.readOnlyProperties = {\n      'gameBuild': 'Game build',\n      'gameVersion': 'Game version',\n      'gameMode': 'Game mode',\n      'currentTurn': 'Current turn',\n      'difficulty': 'Difficulty',\n      'startingEra': 'Starting era',\n      'currentEra': 'Current era',\n      'gamePace': 'Game pace',\n      'mapSize': 'Map size',\n      'mapFile': 'Map',\n    }\n  }\n\n  getPlayerList() {\n    let playerListArray = this.props.savegame.players.map(player => {\n      if (typeof player.civilization !== 'undefined') {\n        return `${player.civilization} (${player.status})`;\n      } else {\n        return `(${player.status})`;\n      }\n    });\n    let playerList = playerListArray.join(', ');\n\n    return playerList;\n  }\n\n  handleExpandClick = () => {\n    this.setState({ expanded: !this.state.expanded });\n  };\n\n  isSavegamePropertyDefined(propertyName) {\n    return !isNullOrUndefined(this.props.savegame) && typeof this.props.savegame[propertyName] !== 'undefined';\n  }\n\n  render () {\n    return (\n      <div\n        className={this.props.classes.propertyList}\n        style={{\n          // TODO: adjust this as necessary\n          maxWidth: '900px',\n        }}\n      >\n        <IconButton\n          aria-expanded={this.state.expanded}\n          aria-label=\"Game details\"\n          className={this.props.classes.propertyListHeading}\n          onClick={this.handleExpandClick}\n          style={{\n            fontSize: this.props.theme.typography.fontSize,\n            height: 'initial',\n            width: 'initial',\n          }}\n        >\n          <Typography type=\"subheading\">\n            Game details\n          </Typography>\n          <Icon\n            style={{\n              margin: '0 6px',\n              transform: (this.state.expanded && 'rotate(180deg)'),\n              transition: this.props.theme.transitions.create('transform', {\n                duration: this.props.theme.transitions.duration.shortest,\n              })\n            }}\n          >expand_more</Icon>\n        </IconButton>\n        <Collapse\n          in={this.state.expanded}\n          style={{\n            // Make sure box shadow isn't cut off by overflow: hidden (https://stackoverflow.com/a/33949075/399105)\n            margin: '-5px',\n            padding: '5px',\n          }}\n          transitionDuration=\"auto\"\n        >\n          <Paper className={this.props.classes.paper}>\n            <div\n              className={this.props.classes.propertyListBody}\n              style={{\n                display: 'flex',\n                flexFlow: 'row wrap',\n                // Offset the padding of the inside elements\n                paddingBottom: '0px',\n                paddingRight: '0px',\n                // More closely match the padding of the other property lists\n                paddingTop: '16px',\n              }}\n            >\n              {Object.keys(this.readOnlyProperties).map(propertyName =>\n                this.isSavegamePropertyDefined(propertyName) &&\n                  <div\n                    className={this.props.classes.readOnlyPropertiesItem}\n                    key={propertyName}\n                    style={{\n                      flex: '0 1 130px',\n                    }}\n                  >\n                    <Typography type='body1'>{this.readOnlyProperties[propertyName]}:<br /><em>{this.props.savegame[propertyName]}</em></Typography>\n                  </div>\n              )}\n              <div className={this.props.classes.readOnlyPropertiesItem}>\n                <Typography type='body1'>Players: <em>{this.getPlayerList()}</em></Typography>\n              </div>\n              {this.isSavegamePropertyDefined('enabledDLC') &&\n                <div\n                className={this.props.classes.readOnlyPropertiesItem}\n                style={{\n                  width: '100%',\n                }}>\n                  <Typography type='body1'>DLC: <em>{this.props.savegame.enabledDLC.join(', ') || 'None'}</em></Typography>\n                </div>\n              }\n              {this.isSavegamePropertyDefined('enabledMods') &&\n                <div\n                  className={this.props.classes.readOnlyPropertiesItem}\n                  style={{\n                    width: '100%',\n                  }}>\n                  <Typography type='body1'>Mods: <em>{this.props.savegame.enabledMods.join(', ') || 'None'}</em></Typography>\n                </div>\n              }\n            </div>\n          </Paper>\n        </Collapse>\n      </div>\n    );\n  }\n}\n\nfunction isNullOrUndefined(variable) {\n  return typeof variable === 'undefined' || variable === null;\n}\n\nexport default withStyles(styles)(ReadOnlyProperties);\n","import App from './App';\nimport Civ5Save from 'civ5save';\nimport Icon from 'material-ui/Icon';\nimport { ListItem, ListItemIcon, ListItemText } from 'material-ui/List';\nimport React, { PureComponent } from 'react';\n\nexport default class UploadFileButton extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async handleChange(event) {\n    if (this.refs.fileUploader.files.length > 0) {\n      this.props.changeSavegameState(App.SAVEGAME_STATES.LOADING);\n      let newSaveFile = this.refs.fileUploader.files[0];\n      try {\n        let newSavegame = await Civ5Save.fromFile(newSaveFile);\n        this.props.onNewSavegame(newSavegame, newSaveFile.name);\n      } catch (e) {\n        e.customMessage = 'Please try another file or use the link on the left to report a bug.'\n        this.props.onError(e);\n      }\n    }\n  }\n\n  handleClick(event) {\n    // Fix bug where onChange isn't triggered if the same file is selected (https://stackoverflow.com/a/12102992/399105)\n    this.refs.fileUploader.value = null;\n    this.refs.fileUploader.click();\n  }\n\n  render() {\n    return (\n      <ListItem button onClick={this.handleClick}>\n        <ListItemIcon>\n          <Icon>folder_open</Icon>\n        </ListItemIcon>\n        <ListItemText primary=\"Open save file\" />\n        <input type=\"file\" ref=\"fileUploader\" onChange={this.handleChange} style={{display: \"none\"}} />\n      </ListItem>\n    );\n  }\n}\n","import PropertyList from './PropertyList';\nimport React from 'react';\n\nexport default function VictoryTypeProperties(props) {\n  return (\n    <PropertyList\n      classes={props.classes}\n      label=\"Victory types\"\n      onPropertyChanged={props.onPropertyChanged}\n      savegame={props.savegame}\n      saveProperties={{\n        'timeVictory': 'Time victory',\n        'maxTurns': 'Max turns',\n        'scienceVictory': 'Science victory',\n        'dominationVictory': 'Domination victory',\n        'culturalVictory': 'Cultural victory',\n        'diplomaticVictory': 'Diplomatic victory',\n      }}\n    />\n  );\n}\n","import AdvancedProperties from './AdvancedProperties';\nimport AppBar from 'material-ui/AppBar';\nimport { CircularProgress } from 'material-ui/Progress';\nimport Civ5Save from 'civ5save';\nimport { createMuiTheme } from 'material-ui/styles';\nimport createPalette from 'material-ui/styles/palette';\nimport createTypography from 'material-ui/styles/typography';\nimport DemoButton from './DemoButton';\nimport DownloadFileButton from './DownloadFileButton';\nimport HiddenProperties from './HiddenProperties';\nimport Icon from 'material-ui/Icon';\nimport IconButton from 'material-ui/IconButton';\nimport List, { ListItem, ListItemIcon, ListItemText } from 'material-ui/List';\nimport { MuiThemeProvider } from 'material-ui/styles';\nimport MultiplayerProperties from './MultiplayerProperties';\nimport React, { Component } from 'react';\nimport SvgIcon from 'material-ui/SvgIcon';\nimport Toolbar from 'material-ui/Toolbar';\nimport Typography from 'material-ui/Typography';\nimport { createStyleSheet, withStyles } from 'material-ui/styles';\nimport ReadOnlyProperties from './ReadOnlyProperties';\nimport UploadFileButton from './UploadFileButton';\nimport VictoryTypeProperties from './VictoryTypeProperties';\n\nconst APP_TITLE = 'Civilization V save editor';\nconst REPO_URL = 'https://github.com/bmaupin/civ5save-editor';\n\nconst darkTheme = (() => {\n  const palette = createPalette({\n    type: 'dark',\n  });\n\n  // The default font for all Material UI elements is handled here. For everything else use CSS\n  const typography = createTypography(palette, {\n    fontFamily: '\"Tw Cen W01 Medium\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontSize: 'initial',\n  });\n\n  // Nested properties can't be defined in createTypography()\n  typography.body1.fontSize = 'initial';\n  typography.subheading.fontSize = '1.17em';\n  typography.title.fontSize = '1.5em';\n\n  return createMuiTheme({\n    palette: palette,\n    typography: typography,\n  });\n})();\n\nconst styles = createStyleSheet(theme => ({\n  checkbox: {\n    height: '36px',\n  },\n  formControlLabel: {\n    marginRight: '0',\n  },\n  paper: {\n    backgroundColor: darkTheme.palette.background.contentFrame,\n  },\n  propertyList: {\n    margin: '20px 0 4px 24px',\n  },\n  propertyListBody: {\n    margin: '10px 0 0 0',\n    padding: '10px 20px',\n  },\n  radioButton: {\n    height: '36px',\n  },\n  subProperty: {\n    padding: '0 0 0 12px',\n  }\n}));\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      savegame: null,\n      savegameState: App.SAVEGAME_STATES.NOT_LOADED,\n    };\n\n    this.changeSavegameState = this.changeSavegameState.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleNewSavegame = this.handleNewSavegame.bind(this);\n    this.handlePropertyChange = this.handlePropertyChange.bind(this);\n  }\n\n  changeSavegameState(newState) {\n    this.setState({\n      savegameState: newState,\n    });\n  }\n\n  handleError(error) {\n    this.setState({\n      error: error,\n      savegameState: App.SAVEGAME_STATES.ERROR,\n    });\n  }\n\n  handleNewSavegame(newSavegame, newSavegameFilename) {\n    this.setState({\n      savegame: newSavegame,\n      savegameFilename: newSavegameFilename,\n      savegameState: App.SAVEGAME_STATES.LOADED,\n    });\n  }\n\n  handlePropertyChange(propertyName, newValue) {\n    this.setState((previousState) => {\n      previousState.savegame[propertyName] = newValue;\n      return previousState;\n    });\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider\n        className=\"App\"\n        style={{\n          height: '100%',\n        }}\n        theme={darkTheme}\n      >\n        <div\n          style={{\n            height: '100%',\n          }}\n        >\n          <AppBar\n             style={{\n              // Make sure app bar doesn't cover up page content\n              position: 'relative',\n            }}\n          >\n            <Toolbar>\n              <Typography\n                // This makes sure the button is aligned on the right\n                style={{ flex: '1' }}\n                type=\"title\"\n              >\n                {APP_TITLE}\n              </Typography>\n              <IconButton color=\"contrast\" href={REPO_URL}>\n                <SvgIcon>\n                  <path d=\"M12.007 0C6.12 0 1.1 4.27.157 10.08c-.944 5.813 2.468 11.45 8.054 13.312.19.064.397.033.555-.084.16-.117.25-.304.244-.5v-2.042c-3.33.735-4.037-1.56-4.037-1.56-.22-.726-.694-1.35-1.334-1.756-1.096-.75.074-.735.074-.735.773.103 1.454.557 1.846 1.23.694 1.21 2.23 1.638 3.45.96.056-.61.327-1.178.766-1.605-2.67-.3-5.462-1.335-5.462-6.002-.02-1.193.42-2.35 1.23-3.226-.327-1.015-.27-2.116.166-3.09 0 0 1.006-.33 3.3 1.23 1.966-.538 4.04-.538 6.003 0 2.295-1.5 3.3-1.23 3.3-1.23.445 1.006.49 2.144.12 3.18.81.877 1.25 2.033 1.23 3.226 0 4.607-2.805 5.627-5.476 5.927.578.583.88 1.386.825 2.206v3.29c-.005.2.092.393.26.507.164.115.377.14.565.063 5.568-1.88 8.956-7.514 8.007-13.313C22.892 4.267 17.884.007 12.008 0z\" />\n                </SvgIcon>\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <div\n            style={{\n              background: darkTheme.palette.background.default,\n              color: darkTheme.palette.text.primary,\n              display: 'flex',\n              // TODO: we've subtracted the appbar height to prevent overflow. Is there a more elegant way to do this?\n              minHeight: 'calc(100% - 64px)',\n            }}\n          >\n            <div\n              style={{\n                minHeight: '100%',\n              }}\n            >\n              <List\n                style={{\n                  backgroundColor: darkTheme.palette.background.paper,\n                  boxSizing: 'border-box',\n                  height: '100%',\n                }}\n              >\n                <UploadFileButton\n                  changeSavegameState={this.changeSavegameState}\n                  onError={this.handleError}\n                  onNewSavegame={this.handleNewSavegame}\n                />\n                <DownloadFileButton\n                  disabled={this.state.savegameState !== App.SAVEGAME_STATES.LOADED}\n                  savegame={this.state.savegame}\n                  savegameFilename={this.state.savegameFilename}\n                />\n                <ListItem button component=\"a\" href={`${REPO_URL}/issues`}>\n                  <ListItemIcon>\n                    <Icon>bug_report</Icon>\n                  </ListItemIcon>\n                  <ListItemText primary=\"Report bug\" />\n                </ListItem>\n                <DemoButton\n                  changeSavegameState={this.changeSavegameState}\n                  onError={this.handleError}\n                  onNewSavegame={this.handleNewSavegame}\n                />\n              </List>\n            </div>\n            <div\n              style={{\n                flex: '1',\n                padding: '0 24px 20px 0',\n              }}\n            >\n              {this.state.savegameState === App.SAVEGAME_STATES.NOT_LOADED &&\n                <List\n                  style={{\n                    opacity: '0.8',\n                  }}\n                >\n                  <ListItem>\n                    <ListItemText primary=\"← Start by clicking here to open a Civilization V save file from your computer\" />\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"← When you're done, click here to download a new save file with the changes\" />\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"← If you have any problems, you can report a bug here\" />\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"← Click here to try out the editor with a sample save file\" />\n                  </ListItem>\n                </List>\n              }\n              {this.state.savegameState === App.SAVEGAME_STATES.LOADING &&\n                <div\n                  style={{\n                    alignItems: 'center',\n                    display: 'flex',\n                    height: '100%',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <div>\n                    <CircularProgress size={50} />\n                  </div>\n                </div>\n              }\n              {this.state.savegameState === App.SAVEGAME_STATES.LOADED &&\n                <div>\n                  <ReadOnlyProperties\n                    classes={this.props.classes}\n                    savegame={this.state.savegame}\n                    theme={darkTheme}\n                  />\n                  <div\n                    style={{\n                      display: 'flex',\n                      flexFlow: 'row wrap',\n                    }}\n                  >\n                    <VictoryTypeProperties\n                      classes={this.props.classes}\n                      onPropertyChanged={this.handlePropertyChange}\n                      savegame={this.state.savegame}\n                    />\n                    <AdvancedProperties\n                      classes={this.props.classes}\n                      onPropertyChanged={this.handlePropertyChange}\n                      savegame={this.state.savegame}\n                    />\n                    <HiddenProperties\n                      classes={this.props.classes}\n                      onPropertyChanged={this.handlePropertyChange}\n                      savegame={this.state.savegame}\n                    />\n                    {(this.state.savegame.gameMode === Civ5Save.GAME_MODES.MULTI ||\n                      this.state.savegame.gameMode === Civ5Save.GAME_MODES.HOTSEAT) &&\n                      <MultiplayerProperties\n                        classes={this.props.classes}\n                        onPropertyChanged={this.handlePropertyChange}\n                        savegame={this.state.savegame}\n                      />\n                    }\n                  </div>\n                </div>\n              }\n              {this.state.savegameState === App.SAVEGAME_STATES.ERROR &&\n                <Typography\n                  style={{\n                    margin: '20px',\n                  }}\n                  type=\"subheading\"\n                >\n                  <p><Icon style={{ fontSize: '50px' }}>error_outline</Icon></p>\n                  <p>The following error was encountered when trying to open the save file:</p>\n                  <pre>\n                    {this.state.error.message}\n                  </pre>\n                  <p dangerouslySetInnerHTML={{__html: this.state.error.customMessage}} />\n                </Typography>\n              }\n            </div>\n          </div>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nApp.SAVEGAME_STATES = {\n  ERROR: 'Error',\n  LOADED: 'Loaded',\n  LOADING: 'Loading',\n  NOT_LOADED: 'Not loaded',\n};\n\nexport default withStyles(styles)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}